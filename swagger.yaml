swagger: '2.0'
info:
  version: "1.0.0"
  title: VROOM DSP
  description: |
    Api sur la consultation et la mise à jour de dossier concernant la grêle.

#host: apidev.vroom.pro
#basePath: /

host: localhost
basePath: /api

tags:
  - name: Connexion
  - name: Dossiers
  - name: Identifier
    description: |
      Identifier le véhicule
  - name: Photos
    description: |
      Ajouter des photos
  - name: Expertiser
    description: |
      Expertiser le véhicule
  - name: PV
    description: |
      Etablir le procès verbal
produces:
  - "application/json"
paths:
  /user/login:
    post:
      summary: Première connexion
      description: |
        Première connexion en vue d'obtenir un token qui sera transmis à chaque appel et des données pour le mode hors connexion
      tags:
        - Connexion
        - Tous
      parameters:
        - name: login
          in: formData
          description: |
            Login de l'utilisateur qui lance la requête
          required: true
          type: string

        - name: password
          in: formData
          description: |
            Mot de passe destiné à l'authentification
          required: true
          type: string
          format: password

        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de l'authentification:
            -----------------------------
            Les données retournées sont **nécessaire au mode hors connexion**, ces données sont les suivantes :
              - La _liste des pièces disponible_ en vue de remplir la liste des pièces à choisir.
              - les _3 types de réparations disponible_ pour les boutons dans les pièces.
              - L'_identifiant_ de l'expert et son _login_.
              - Les _grilles tarifaires_ des pièces endommagées par la grêle.
              - Le _token_ à passer dans chacun des appels suivant.
          schema:
            title: RetourLogin
            type: object
            required:
              - response
              - message
              - nb_resultats
              - execute_time
              - token
              - resultats
            properties:
              response:
                type: string
                description: Statut de la requete.
              message:
                type: string
                description: Message sur le statut de la requête.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              token:
                type: string
                description: Jeton à transmettre dans chacun des appels suivant
              resultats:
                title: ResultatRequete
                type: object
                required:
                  - pieces_disponibles
                  - type_reparation
                  - expert
                  - grilles_tarifaires
                  - nb_impacts_max
                properties:
                  pieces_disponibles:
                    $ref: "#/definitions/ListePieceDisponible"
                  type_reparation:
                    $ref: "#/definitions/ListeTypeReparationDisponible"
                  expert:
                    $ref: "#/definitions/InformationsExpert"
                  grilles_tarifaires:
                    $ref: "#/definitions/ListePrixGrilles"
                  nb_impacts_max:
                    type: integer
                    description: |
                      Nombre d'impacts max avant de changer automatiquement le type de réparation par "Echange"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                pieces_disponibles:
                  - id: 1
                    libelle: Capot
                    position:
                  - id: 2
                    libelle: Aile
                    position: AVG
                  - id: 3
                    libelle: Aile
                    position: ARG
                  - id: 4
                    libelle: Aile
                    position: AVD
                  - id: 5
                    libelle: Aile
                    position: ARD
                  - id: 6
                    libelle: Pare-brise
                    position:
                type_reparation_disponible:
                  1: Redressage
                  2: Débosselage
                  3: Echange
                grilles_tarifaires:
                  Dent Wizard:
                    petit:
                      1:
                        taille_impact: petit
                        nb_impact_min: 1
                        nb_impact_max: 4
                        nom_grille: Dent Wizard
                        montant: 12
                      5:
                        taille_impact: petit
                        nb_impact_min: 5
                        nb_impact_max: 9
                        nom_grille: Dent Wizard
                        montant: 16
                    moyen:
                      1:
                        taille_impact: moyen
                        nb_impact_min: 1
                        nb_impact_max: 4
                        nom_grille: Dent Wizard
                        montant: 16
                      5:
                        taille_impact: moyen
                        nb_impact_min: 5
                        nb_impact_max: 9
                        nom_grille: Dent Wizard
                        montant: 18
                expert:
                  expert_id: 1777596
                  login: EIDWA
                nb_impacts_max: 200
              token: $2a$08$oOWPtQtzjaXVQBEbhSc9POrX2h97elXFF/N6l6QYFZXp2rX3tNGwW
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

  /rest/experts/{id}/dossiers/{jour}:
    get:
      summary: Liste les dossiers du jour
      description: |
        Retourne la liste des dossiers de VROOM du jour selon l'identifiant de l'expert et le jour choisi,
        le tout trié par statut et par date d'expertise.
      tags:
        - Dossiers
        - Tous
      parameters:
        - name: id
          in: path
          description: |
            Identifiant de l'expert choisi
          required: true
          type: integer

        - name: jour
          in: path
          description: |
            Date des dossiers à récupérer au format YYYY-mm-dd
          required: true
          type: string
          format: date
        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
        - name: start
          in: query
          description: |
            Correspond au numéro de la page commence à 0 pour obtenir la première page
          required: false
          type: integer
          minimum: 0
        - name: limit
          in: query
          description: |
            Nombre de dossiers à retourner pour chaque page
          required: false
          type: integer
          minimum: 0
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Liste des dossiers du jour.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
              - current_page
              - limit
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                $ref: '#/definitions/ListeDossiers'
              current_page:
                type: integer
                description: |
                  Le numéro de la page actuelle commence à 1
                minimum: 0
              limit:
                type: string
                description:  |
                  le nombre avant la virgule correspond au nombre de dossiers précédents les dossiers retournés,
                  après au nombre de dossiers par page.
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 2
              execute_time: 0.00087
              resultats:
                - dossier_id: 1
                  internal_id: 12518
                  nom_prenom: Dupont Luc
                  immatriculation: DJ-925-AL
                  marque: Peugeot
                  modele: 206
                  statut: 0

                - dossier_id: 2
                  internal_id: 13504
                  nom_prenom: Marc Trollou
                  immatriculation: AP-832-DD
                  marque: Citroen
                  modele: C4
                  statut: 1
              current_page: 1
              limit: 15
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: Dossiers interdits pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Vous n'avez pas le droit d'accéder à ces dossiers."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "404":
          description: L'identifiant de l'expert n'existe pas.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Aucun dossier trouvé pour ces identifiants."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

  /rest/dossiers/{id}:
    get:
      summary: Retourne les informations d'un dossier
      description: |
        Retourne le dossier depuis son identifiant
      tags:
        - Dossiers
        - Tous
      parameters:
        - name: id
          in: path
          description: Identifiant unique du dossier
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Dossier récupéré depuis sont identifiant.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                $ref: "#/definitions/Dossier"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                dossier_id: 1
                nom_prenom: Dupont Luc
                immatriculation: DJ-925-AL
                marque: Peugeot
                modele: 206
                nombre_pieces: 2
                nombre_photos: 5
                statut: 1
                date_rapport: "2017-02-22 12:30:00"
                montant: 1500.12
                afficher_btn_ajouter_photos: true
                afficher_btn_expertiser: true
                afficher_btn_proces_verbal: true
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Vous n'avez pas le droit d'accéder à ce dossier."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "404":
          description: Aucun dossier trouvé.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: "Aucun dossier trouvé."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

  /rest/dossiers/{id}/pieces:
    get:
      summary: Liste les pièces endommagées du dossier
      description: |
        Retourne les pièces endommagées du dossier depuis l'identifiant de celui-ci.
      tags:
        - Expertiser
        - Tous
      parameters:
        - name: id
          in: path
          description: Identifiant du dossier
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Liste des pièces endommagées du dossier déjà ajoutées ou liste vide si le dossier ne contient aucune pièce.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                type: array
                items:
                  $ref: "#/definitions/Piece"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                - id_type_piece: 2
                  aluminium: 0
                  peinture: 1
                  hors_sinistre: 0
                  id_type_reparation: 1
                  impacts:
                    - taille: petit
                      nombre: 3
                    - taille: moyen
                      nombre: 15
                - id_type_piece: 2
                  aluminium: 1
                  peinture: 1
                  hors_sinistre: 1
                  id_type_reparation: 1
                  impacts:
                    - taille: petit
                      nombre: 3
                    - taille: moyen
                      nombre: 15
                    - taille: gros
                      nombre: 1
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Vous n'avez pas le droit d'accéder à ce dossier."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "404":
          description: Aucun dossier trouvé.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Ce dossier n'existe pas."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

    post:
      consumes:
        - application/json
      produces:
        - application/json
      summary: Créé une pièce
      description: |
        Soumet la création d'une nouvelle pièce pour ce dossier.
      tags:
        - Expertiser
        - Tous
      parameters:
        - description: Identifiant du dossier
          name: id
          in: path
          required: true
          type: integer

        - description: Formulaire de création d'une pièce
          name: piece
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddOrUpdatePiece'

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "201":
          description: |
            Succès de la requete:
            ---------------------
            La pièce est retournée après la création.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                $ref: '#/definitions/Piece'
          examples:
            application/json:
              response: OK
              message: |
                La pièce a été créé avec succès.
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                id_type_piece: 1
                aluminium: 0
                peinture: 1
                hors_sinistre: 0
                id_type_reparation: 3
                impacts:
                  - taille: petit
                    nombre: 3
                  - taille: moyen
                    nombre: 15
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: Aucun dossier trouvé.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Le dossier n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "409":
          description: La pièce en question existe déjà.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                La pièce *Capot* existe déjà pour ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "500":
          description: Une erreur lors de la persistance s'est produite.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Une erreur s'est produite.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/dossiers/{id}/photos:
    get:
      summary: Liste les photos du dossier
      description: |
        Liste des photos du dossier depuis l'identifiant fourni, ou pas de liste si aucune photo n'a été trouvé pour le dossier.
      tags:
        - Photos
        - Tous
      parameters:
        - name: id
          in: path
          description: Identifiant du dossier
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Tableau des photos du dossier
          schema:
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            type: object
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                type: array
                items:
                  $ref: "#/definitions/Photo"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 2
              execute_time: 0.00077
              resultats:
                - photo_id: 12
                  url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/2017003128/2017003128_2017-01-19_20-10-59_AUTRE.pdf
                - photo_id: 1601
                  url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/2017003112/201700312_2017-01-19_20-10-59_AUTRE.pdf
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
             $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Aucun dossier trouvé pour cet identifiant.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Le dossier n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

    post:
      summary: Ajoute des photos au dossier
      description: |
        Permet d'ajouter une ou plusieurs photo(s) au dossier depuis l'identifiant de celui-ci.
        Les photos doivent être **au format JPG** pour qu'elles soient intégrées.
      tags:
        - Photos
        - Tous
      consumes:
        - multipart/form-data
      parameters:
        - description: |
            Identifiant du dossier
          name: id
          in: path
          required: true
          type: integer

        - description: |
            Nom du fichier à envoyer avec l'extension
          name: files[0][0][name]
          in: formData
          type: string
          default: un ptit chat.jpg

        - description: |
            Données du fichier en base 64
          name: files[0][0][data]
          in: formData
          type: string
          default: data:image/;base64,

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "201":
          description: |
            Succès de la requete:
            ---------------------
            Présentation des données envoyées.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                $ref: "#/definitions/ListePhotos"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 2
              execute_time: 0.00077
              resultats:
                - photo_id: 1601
                  url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/2017003128/2017003128_2017-01-19_20-10-59_AUTRE.pdf
                - photo_id: 1602
                  url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/2017003112/201700312_2017-01-19_20-10-59_AUTRE.pdf
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
             $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Aucun dossier trouvé pour cet identifiant.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                La pièce n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "500":
          description: |
            Une erreur c'est produite. Veuillez contacter le service informatique.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Une erreur s'est produite.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/dossiers/{id}/proces_verbal:
    post:
      summary: Génére le procès verbal d'un dossier DSP
      description: |
        Génération d'un procès verbal d'expertise d'un dossier DSP depuis un identifiant de dossier et de différentes informations.
      tags:
        - PV
        - Tous
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          type: integer
          required: true
          description: |
            Identifiant unique du dossier.

        - name: temps_redressage_1
          type: number
          in: formData
          required: false
          description: |
            Le temps de redressage numero un

        - name: temps_redressage_2
          in: formData
          required: false
          type: number
          description: |
            Le temps de redressage numero deux

        - name: temps_peinture
          in: formData
          required: false
          type: number
          description: |
            Le temps necessaire pour peindre les pièces endommagées

        - name: est_reparable
          in: formData
          required: true
          type: string
          description: |
            Texte des boutons indiquant si le véhicule est "Réparable" ou "A l'étude" ou "Non réparable"

        - name: montant
          in: formData
          required: true
          type: number
          description: |
            Montant d'engagement sur le coût total des réparations vu entre le réparateur et l'expert.

        - name: signature_expert
          in: formData
          required: true
          type: file
          description: |
            Signature de l'expert pour certifié que c'est bien lui qui a établi ce PV

        - name: signature_reparateur
          in: formData
          required: true
          type: file
          description: |
            Signature du réparateur pour certifié que c'est bien lui qui va réparer pour ce montant

        - name: commentaire
          in: formData
          required: false
          type: string
          description: |
            Commentaire sur le dossier en question.

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "201":
          description: |
            Succès de la requete:
            ---------------------
            Message de succès suite à la génération du procès verbal d'expertise.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: OK
              message: |
                La procès verbal a été créé avec succès.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Le dossier indiqué n'existe pas.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Le dossier n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/dossiers/{dossier_id}/pieces/{id_type_piece}:
    put:
      summary: Met à jour une pièce
      description: |
        Met à jour une pièce depuis son type id et son dossier id
      tags:
        - Expertiser
        - Tous
      parameters:
        - description: |
            Identifiant du dossier
          name: dossier_id
          in: path
          required: true
          type: integer


        - description: |
            Identifiant du type d'une pièce, unique par
          name: id_type_piece
          in: path
          required: true
          type: integer


        - description: |
            Formulaire de mise à jour d'une pièce
          name: piece
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddOrUpdatePiece'

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Succès de la mise à jour de la pièce.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer

                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                $ref: '#/definitions/Piece'
          examples:
            application/json:
              response: OK
              message: |
                Succès de la mise à jour de la pièce.
              nb_resultats: 1
              execute_time: 0.00077
              resultats:
                id_type_piece: 1
                aluminium: 0
                peinture: 0
                hors_sinistre: 0
                id_type_reparation: 1
                impacts:
                  - taille: petit
                    nombre: 3
                  - taille: moyen
                    nombre: 15
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: Aucun pièce trouvée.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                La pièce n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

    delete:
      summary: Supprime une pièce
      description: |
        Supprime la pièce depuis son type id et son dossier id
      tags:
        - Expertiser
        - Tous
      parameters:
        - description: |
            Identifiant du dossier
          name: dossier_id
          in: path
          required: true
          type: integer


        - description: |
            Identifiant du type d'une pièce, unique par dossier
          name: id_type_piece
          in: path
          required: true
          type: integer


        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            La pièce a été supprimé avec succès.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer

                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                type: array
                description: Résultat de la requete, peut être un tableau vide.
                items:
                  type: string
          examples:
            application/json:
              response: OK
              message: |
                La pièce a été supprimé avec succès.
              nb_resultats: 0
              execute_time: 0.00077
              resultats: null
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Vous n'avez pas de droit de supprimer cette pièce.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de supprimer cette pièce.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Aucun pièce trouvée.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                La pièce n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "500":
          description: Une erreur lors de la suppression de la pièce.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Une erreur s'est produite.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/dossiers/{dossier_id}/pieces/{id_type_piece}/impacts/{taille}:
    put:
      summary: Met à jour un impact d'une pièce
      description: |
        Met à jour un impact d'une pièce depuis le type id de celle-ci, l'id du dossier et la taille de la pièce, unique par dossier
      tags:
        - Expertiser
        - Tous
      parameters:
        - description: |
            Identifiant du dossier
          name: dossier_id
          in: path
          required: true
          type: integer

        - description: |
            Identifiant du type d'une pièce, unique par dossier
          name: id_type_piece
          in: path
          required: true
          type: integer

        - description: |
            Chaine de caractère unique par dossier ("petit", "moyen" ou "gros")
          name: taille
          in: path
          required: true
          type: string

        - description: |
            Nombre d'impact à changer
          name: nombre
          in: query
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la mise à jour:
            -------------------------
            L'impact à bien été mis à jour et est retourné dans la réponse.
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer

                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                $ref: '#/definitions/Impacts'
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00077
              resultats:
                - taille: petit
                  nombre: 4
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

        "403":
          description: |
            Dossier interdit pour cet utilisateur.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de modifier ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: Aucun dossier, pièce ou impact trouvé pour la mise à jour.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                L'impact n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

    delete:
      summary: Supprime un impact
      description: |
        Supprime un impact d'une pièce depuis l'id de celle-ci, l'id du dossier et la taille de l'impact.
      tags:
        - Expertiser
        - Tous
      parameters:
        - description: |
            Identifiant du dossier
          name: dossier_id
          in: path
          required: true
          type: integer

        - description: |
            Identifiant du type d'une pièce, unique par dossier
          name: id_type_piece
          in: path
          required: true
          type: integer

        - description: |
            Chaine de caractère unique par dossier ("petit", "moyen" ou "gros")
          name: taille
          in: path
          required: true
          type: string

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'
      responses:
        "200":
          description: |
            Succès de la suppression:
            -------------------------
            L'impact a été supprimé avec succès
          schema:
            type: object
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête.
              execute_time:
                type: number
                description: Temps de l'exécution de la requête.
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels.
              resultats:
                type: array
                description: Résultat de la requete, peut être un tableau vide.
                items:
                  type: string
          examples:
            application/json:
              response: OK
              message: |
                L'impact a été supprimé avec succès.
              nb_resultats: 0
              execute_time: 0.00077
              resultats: null
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0

        "403":
          description: |
            Vous n'avez pas de droit de supprimer cet impact.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de supprimer cet impact.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Aucun dossier, pièce ou impact trouvé pour la suppression.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                L'impact n'existe pas.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "500":
          description: Une erreur lors de la suppression de l'impact.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Une erreur s'est produite.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/cabinets/dossiers/{critere}:
    get:
      summary: Liste les dossiers d'un cabinet depuis un critère
      description: |
        Liste des dossiers d'un cabinet depuis un critère. La recherche sera sur ce critère en testant en premier l'immatriculation / le numéro de dossier du cabinet (l'internal_id) et pour finir le Nom prénom de l'assuré.
      tags:
        - Dossiers
        - Tous
      parameters:
        - name: critere
          description: |
            Critère de recherche, peut être une immatriculation, un numéro de dossier ou un nom prénom
          in: path
          type: string
          required: true

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'

        - name: start
          in: query
          description: |
            Correspond au numéro de la page commence à 0 pour obtenir la première page
          required: false
          type: integer
          minimum: 0

        - name: limit
          in: query
          description: |
            Nombre de dossiers à retourner pour chaque page
          required: false
          type: integer
          minimum: 0
      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Liste de dossiers
          schema:
            $ref: '#/definitions/ListeDossiers'
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 2
              execute_time: 0.00087
              resultats:
                - dossier_id: 1
                  nom_prenom: Dupont Luc
                  immatriculation: DJ-925-AL
                  marque: Peugeot
                  modele: 206
                  nombre_pieces: 2
                  nombre_photos: 0
                  statut: 0
                  afficher_btn_expertiser: false
                  afficher_btn_proces_verbal: false
                  photos: null
                  pieces:
                  - id_type_piece: 2
                    aluminium: 0
                    peinture: 1
                    hors_sinistre: 0
                    id_type_reparation: 1
                    impacts:
                      - taille: petit
                        nombre: 3
                      - taille: moyen
                        nombre: 15
                  - id_type_piece: 2
                    aluminium: 1
                    peinture: 1
                    hors_sinistre: 1
                    id_type_reparation: 1
                    impacts:
                      - taille: petit
                        nombre: 3
                      - taille: moyen
                        nombre: 15
                      - taille: gros
                        nombre: 1

                - dossier_id: 1122
                  internal_id: 2
                  nom_prenom: Marc Trollou
                  immatriculation: AP-832-DD
                  marque: Citroen
                  modele: C4
                  nombre_pieces: 1
                  nombre_photos: 5
                  statut: 1
                  afficher_btn_expertiser: false
                  afficher_btn_proces_verbal: false
                  photos:
                    - photo_id: 12
                      url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/20170012/20170012-01-19_20-10-59_AUTRE.pdf
                    - photo_id: 13
                      url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/20170013/20170013-01-19_20-10-59_AUTRE.pdf
                    - photo_id: 14
                      url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/20170014/20170014-01-19_20-10-59_AUTRE.pdf
                    - photo_id: 15
                      url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/20170015/20170015-01-19_20-10-59_AUTRE.pdf
                    - photo_id: 16
                      url: https://expertiseconcept.s3.eu-central-1.amazonaws.com/documents/expertise_%26_concept/20170016/20170016-01-19_20-10-59_AUTRE.pdf
                  pieces:
                    - id_type_piece: 3
                      aluminium: 1
                      peinture: 1
                      hors_sinistre: 1
                      id_type_reparation: 1
                      impacts:
                        - taille: petit
                          nombre: 3
                        - taille: moyen
                          nombre: 15
                        - taille: gros
                          nombre: 1
              current_page: 1
              limit: 15
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Vous n'avez pas de droit d'accéder à ces dossiers.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de supprimer cette pièce.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Le cabinet n'existe pas, l'identifiant ne doit pas être le bon.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Aucun dossier trouvé pour ce cabinet.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

  /rest/dossiers/{id}/vehicule:
    get:
      summary: Récupère le véhicule du dossier
      description: |
        Retourne le véhicule affecté au dossier avant d'établir le procès verbal.
      tags:
        - Tous
        - Identifier
      parameters:

        - name: id
          in: path
          description: Identifiant unique du dossier
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'

      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Véhicule retourné avec succès.
          schema:
            type: object
            title: Returner
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                $ref: "#/definitions/Vehicule"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                vin: VF7GJRHYK93027653
                immatriculation: DA-939-JO
                modele: Velsatis
                constructeur: Renault
                genre: VP
                kilometrage: 181645
                code_energie: GO,
                code_carrosserie: CI 5
                categorie_vehicule: moyen
                annee_modele: 2006
                couleur: bleu
                puissance_fiscale: 9
                date_achat: '2006-05-06 00:00:00'
                date_immatriculation: '2006-07-07 00:00:00'
                usure_pneu_AVG: 10
                usure_pneu_AVD: 10
                usure_pneu_ARG: 20
                usure_pneu_ARD: 20
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Vous n'avez pas de droit d'accéder à ce dossiers.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de consulter le véhicule de ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Le dossier n'existe pas.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Aucun dossier avec cet identifiant trouvé pour ce cabinet.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

    put:
      summary: Met à jour le véhicule du dossier
      description: |
        Met à jour le véhicule affecté au dossier avant d'établir le procès verbal.
      tags:
        - Tous
        - Identifier
      parameters:

        - name: id
          in: path
          description: Identifiant unique du dossier
          required: true
          type: integer

        - $ref: '#/parameters/token'
        - $ref: '#/parameters/login'
        - $ref: '#/parameters/dsp'

        - name: vehicule
          in: body
          description: Les informations du véhicule
          required: true
          schema:
            $ref: '#/definitions/UpdateVehicule'

      responses:
        "200":
          description: |
            Succès de la requete:
            ---------------------
            Véhicule modifié avec succès.
          schema:
            type: object
            title: Returner
            required:
              - message
              - response
              - nb_resultats
              - execute_time
              - resultats
            properties:
              message:
                type: string
                description: Message sur le statut de la requête.
              response:
                type: string
                description: Statut de la requete.
              nb_resultats:
                type: integer
                description: Nombre de résultats de la requête
              execute_time:
                type: number
                description: Temps de l'exécution de la requête
              new_token:
                type: string
                description: Nouveau token à utiliser pour les prochains appels
              resultats:
                $ref: "#/definitions/Vehicule"
          examples:
            application/json:
              response: OK
              message: ""
              nb_resultats: 1
              execute_time: 0.00087
              resultats:
                vin: VF7GJRHYK93027653
                immatriculation: DA-939-JO
                modele: Velsatis
                constructeur: Renault
                genre: VP
                kilometrage: 181645
                code_energie: GO
                code_carrosserie: CI 5
                categorie_vehicule: moyen
                annee_modele: 2006
                couleur: bleu
                puissance_fiscale: 9
                date_achat: '2006-05-06 00:00:00'
                date_immatriculation: '2006-07-07 00:00:00'
                usure_pneu_AVG: 10
                usure_pneu_AVD: 10
                usure_pneu_ARG: 20
                usure_pneu_ARD: 20
        "400":
          description: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: Les paramètres fournis ne sont pas dans le bon format ou il manque des paramètres
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

        "401":
          description: Votre token est invalide.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: "Le token est invalide ou manquant, vous ne pouvez pas accéder à cette méthode."
              nb_resultats: 0
              execute_time: 0.00087
              resultats: 0
        "403":
          description: |
            Vous n'avez pas de droit d'accéder à ce dossiers.
          schema:
            $ref: '#/definitions/Returner'
          examples:
            application/json:
              response: FAIL
              message: |
                Vous n'avez pas le droit de consulter le véhicule de ce dossier.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null
        "404":
          description: |
            Le dossier n'existe pas.
          schema:
            $ref: "#/definitions/Returner"
          examples:
            application/json:
              response: FAIL
              message: |
                Aucun dossier avec cet identifiant trouvé pour ce cabinet.
              nb_resultats: 0
              execute_time: 0.00087
              resultats: null

# Liste des paramètres fréquents
parameters:

  token:
    name: token
    in: query
    description: |
      Token destiné à l'authentification
    required: true
    type: string

  login:
    name: login
    in: query
    description: |
      Login de l'utilisateur qui lance la requête
    required: true
    type: string

  dsp:
    name: dsp
    in: query
    description: |
      Défini si l'application appelante est l'appli VROOM DSP
    required: false
    default: true
    type: boolean

# Liste des définitions des modèles
definitions:
  Vehicule:
    type: object
    required:
      - vin
      - immatriculation
      - modele
      - constructeur
      - genre
      - kilometrage
      - code_energie
      - code_carrosserie
      - categorie_vehicule
      - annee_modele
      - couleur
      - puissance_fiscale
      - date_achat
      - date_immatriculation
      - usure_pneu_AVG
      - usure_pneu_ARG
      - usure_pneu_AVD
      - usure_pneu_ARD
    properties:
      vin:
        type: string
        description: |
          Identifiant unique du véhicule
      immatriculation:
        type: string
        description: |
          Immatriculation du véhicule
      modele:
        type: string
        description: |
          Modèle du véhicule (C4, 206, Touran, ...)
      constructeur:
        type: string
        description: |
          Constructeur du véhicule (Renault, Peugeot, ...)
      genre:
        type: string
        description: |
          Genre du véhicule (VP, CTTE, VASP)
        default: VP
      kilometrage:
        type: string
        description: |
          Valeur au compteur.
      code_energie:
        type: string
        default: GO
        description: |
          Type de carburant utilisé (ES, GO, ELEC, GPL, EH)
      code_carrosserie:
        type: string
        default: CI 5
        description: |
          Type du véhicule défini par un code (CI 3, CI 5, break)
      categorie_vehicule:
        type: string
        default: moyen
        description: |
          Catégorie du véhicule ("Petit", "Moyen", "Gros").
          Information utile afin de permettre le calcul des tarifs.
          En fonction du libellé, le prix du dégarnissage est différent.
      annee_modele:
        type: integer
        default: 2017
        description: |
          Année du modèle du véhicule
      couleur:
        type: string
        default: grise
        description: |
          Couleur du véhicule
      puissance_fiscale:
        type: integer
        default: 9
        description: |
          Puissance fiscale du véhicule
      date_achat:
        type: string
        format: date
        description: |
          Date de l'achat du véhicule
      date_immatriculation:
        type: string
        format: date
        description: |
          Date de l'immatriculation du véhicule
      usure_pneu_AVD:
        type: string
        description: |
          Usure du pneu à l'avant côté droit
      usure_pneu_AVG:
        type: string
        description: |
          Usure du pneu à l'avant côté gauche
      usure_pneu_ARD:
        type: string
        description: |
          Usure du pneu à l'arrière côté droit
      usure_pneu_ARG:
        type: string
        description: |
          Usure du pneu à l'arrière côté gauche
  UpdateVehicule:
    type: object
    required:
      - kilometrage
      - usure_pneu_AVD
      - usure_pneu_AVG
      - usure_pneu_ARD
      - usure_pneu_ARG
      - categorie_vehicule
    properties:
      vin:
        type: string
        description: |
          Identifiant unique du véhicule
      immatriculation:
        type: string
        description: |
          Immatriculation du véhicule
      modele:
        type: string
        description: |
          Modèle du véhicule (C4, 206, Touran, ...)
      constructeur:
        type: string
        description: |
          Constructeur du véhicule (Renault, Peugeot, ...)
      genre:
        type: string
        description: |
          Genre du véhicule (VP, CTTE, VASP)
        default: VP
      kilometrage:
        type: string
        description: |
          Valeur au compteur.
      code_energie:
        type: string
        default: GO
        description: |
          Type de carburant utilisé (ES, GO, ELEC, GPL, EH)
      code_carrosserie:
        type: string
        default: CI 5
        description: |
          Type du véhicule défini par un code (CI 3, CI 5, break)
      categorie_vehicule:
        type: string
        default: moyen
        description: |
          Catégorie du véhicule ("Petit", "Moyen", "Gros").
          Information utile afin de permettre le calcul des tarifs.
          En fonction du libellé, le prix du dégarnissage est différent.
      annee_modele:
        type: integer
        default: 2017
        description: |
          Année du modèle du véhicule
      couleur:
        type: string
        default: grise
        description: |
          Couleur du véhicule
      puissance_fiscale:
        type: integer
        default: 9
        description: |
          Puissance fiscale du véhicule
      date_achat:
        type: string
        format: date
        description: |
          Date de l'achat du véhicule
      date_immatriculation:
        type: string
        format: date
        description: |
          Date de l'immatriculation du véhicule
      usure_pneu_AVD:
        type: string
        description: |
          Usure du pneu à l'avant côté droit
      usure_pneu_AVG:
        type: string
        description: |
          Usure du pneu à l'avant côté gauche
      usure_pneu_ARD:
        type: string
        description: |
          Usure du pneu à l'arrière côté droit
      usure_pneu_ARG:
        type: string
        description: |
          Usure du pneu à l'arrière côté gauche
  AddOrUpdatePiece:
    type: object
    required:
      - id_type_piece
      - impacts
      - id_type_reparation
    properties:
      id_type_piece:
        type: integer
        description: |
          Identifiant du type de la pièce unique par dossier
      aluminium:
        type: integer
        description: La pièce est-elle en aluminium ?
      peinture:
        type: integer
        description: La pièce doit-elle être peinte ?
      hors_sinistre:
        type: integer
        description: La pièce a-t-elle été endommagé avant le sinistre ?
      id_type_reparation:
        type: integer
        description: Identifiant du type de réparation à faire.
      impacts:
        type: array
        items:
          $ref: "#/definitions/Impacts"
  Dossier:
    type: object
    required:
      - dossier_id
      - nom_prenom
      - immatriculation
      - marque
      - modele
      - nombre_pieces
      - nombre_photos
      - statut
      - afficher_btn_ajouter_photos
      - afficher_btn_expertiser
      - afficher_btn_proces_verbal
    properties:
      dossier_id:
        type: integer
        description: Identifiant du dossier
      nom_prenom:
        type: string
        description: Nom et prénom de l'assuré
      immatriculation:
        type: string
        description: Immatriculation du véhicule
      marque:
        type: string
        description: Marque du véhicule à expertiser
      modele:
        type: string
        description: Modèle du véhicule à expertiser
      nombre_pieces:
        type:  integer
        description: Nombre de pièces endommagées sur ce véhicule
      nombre_photos:
        type: integer
        description: Nombre de photo du dossier pour la grêle
      montant:
        type: number
        description: Montant des réparations défini
      date_rapport:
        type: string
        format: date-time
        description: |
          Date de la génération du rapport d'expertise, le dossier devient clos.
      statut:
        type: integer
        description: Statut du dossier, permet de choisir l'icone correspondant au statut
      afficher_btn_ajouter_photos:
        type: integer
        description: |
          Défini si le bouton "Ajouter des photos" doit être affiché.
      afficher_btn_expertiser:
        type: boolean
        description: |
          Défini si le bouton "Expertiser le véhicule" doit être affiché.
      afficher_btn_proces_verbal:
        type: boolean
        description: |
          Défini si le bouton "Etablir le procès verbal" doit être affiché.

  ListeDossiers:
    type: object
    required:
      - dossier_id
      - internal_id
      - nom_prenom
      - immatriculation
      - marque
      - modele
      - statut
    properties:
      dossier_id:
        type: integer
        description: |
          Identifiant du dossier qui ne doit jamais apparaitre. Le dossier n'est pas connu par cet identifiant,
          il sert uniquement pour communiquer avec l'api.
      internal_id:
        type: integer
        description: |
          Identifiant du dossier interne au cabinet. Cet identifiant, doit être celui qui est affiché.
      nom_prenom:
        type: string
        description: Nom et prénom de l'assuré.
      immatriculation:
        type: string
        description: Immatriculation du véhicule.
      marque:
        type: string
        description: Marque du véhicule à expertiser.
      modele:
        type: string
        description: Modèle du véhicule à expertiser.
      statut:
        type: integer
        description: |
          Statut du dossier, permet de choisir l'icone correspondant au statut.
          Le nombre 0 pour un dossier en cours ou a faire et le nombre 1 pour un dossier dont le rapport est généré.
  Piece:
    type: object
    required:
      - id_type_piece
      - impacts
      - id_type_reparation
      - aluminium
      - peinture
      - hors_sinistre
    properties:
      id_type_piece:
        type: integer
        description: |
          Identifiant du type de la pièce unique par dossier, le libellé de la pièce peut être obtenu avec
          le tableau associatif renvoyé par l'appel à GET /dossiers/{id}/pieces.
      aluminium:
        type: integer
        description: La pièce est-elle en aluminium ?
      peinture:
        type: integer
        description: La pièce doit-elle être peinte ?
      hors_sinistre:
        type: integer
        description: La pièce a-t-elle été endommagé avant le sinistre ?
      id_type_reparation:
        type: integer

        description: |
          Identifiant du type de réparation à faire, tableau associatif fourni lors du GET /dossiers/{id}/pieces.
      impacts:
        type: array
        items:
          $ref: "#/definitions/Impacts"

  TypeReparation:
    type: object
    required:
      - id_type_reparation
      - libelle
    properties:
      id_type_reparation:
        type: integer
        description: |
          Identifiant du type de réparation
      libelle:
        type: string
        description: |
          Libellé du type de réparation ("Echange", "Redressage", "Débosselage")

  ListePieceDisponible:
    type: array
    items:
      $ref: "#/definitions/TypePiece"


  ListeTypeReparationDisponible:
    type: array
    items:
      $ref: "#/definitions/TypeReparation"

  TypePiece:
    type: object
    required:
      - id
      - libelle
    properties:
      id:
        type: integer
        description: |
          Identifiant du type de la pièce couplé à la position.
      libelle:
        type: string
        description: |
          Libellé du type de la pièce
      position:
        type: string
        description: |
          Libellé de la position de la pièce.
  Impacts:
    type: object
    required:
      - taille
      - nombre
    properties:
      taille:
        type: string
        description: Taille de l'impact en toute lettre
        enum:
          - petit
          - moyen
          - gros
      nombre:
        type: integer
        description: Nombre d'impacts présent avec ce diamètre sur la pièce correspondante

  Photo:
    type: object
    required:
      - photo_id
      - url
    properties:
      photo_id:
        type: integer
        description: Identifiant de l'image
      url:
        type: string
        description: Url de la photo en vue de l'afficher

  ListePhotos:
    type: array
    items:
      $ref: "#/definitions/Photo"

  Returner:
    type: object
    required:
      - message
      - response
      - resultats
      - nb_resultats
      - execute_time
    properties:
      message:
        type: string
        description: Message sur le statut de la requête.
      response:
        type: string
        description: Statut de la requete.
      nb_resultats:
        type: integer
        description: Nombre de résultats de la requête
      execute_time:
        type: number
        description: Temps de l'exécution de la requête
      new_token:
        type: string
        description: Nouveau token à utiliser pour les prochains appels
      resultats:
        type: array
        description: Résultat de la requete, peut être un tableau vide.
        items:
          type: string

  Grille:
    type: object
    required:
      - nom_grille
    properties:
      nom_grille:
        type: object
        required:
          - taille_impact
        properties:
          taille_impact:
            type: object
            required:
              - nb_impact_min
            properties:
              nb_impact_min:
                type: object
                title: Tableau tarifaire
                required:
                  - taille_impact
                  - montant
                  - nb_impact_min
                  - nb_impact_max
                  - date
                properties:
                  taille_impact:
                    type: string
                    enum:
                    - petit
                    - moyen
                    - gros
                    description: |
                      Valeur représentant la taille de l'impact.
                  nb_impact_min:
                    type: integer
                    description: |
                      Fouchette basse du nombre d'impact pour correspondre au prix.
                  nb_impact_max:
                    type: integer
                    description: |
                      Fouchette haute du nombre d'impact pour correspondre au prix.
                  montant:
                    type: number
                    description: |
                      Montant décimal du chiffrage selon la taille et le nombre d'impact pour cette grille
                  date:
                    type: string
                    format: date-time
                    description: |
                      Date de la création de cette valeur, permet de différencier l'année de la tarification.

  ListePrixGrilles:
    type: array
    items:
      $ref: '#/definitions/Grille'

  InformationsExpert:
    type: object
    required:
      - expert_id
      - login
    properties:
      expert_id:
        type: integer
        description: |
          Identifiant de l'expert authentifié.
      login:
        type: string
        description: |
          Login de l'expert authentifié.
